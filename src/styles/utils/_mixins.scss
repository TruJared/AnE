@mixin clip-right($deg: 2%) {
  @if (unit($deg) == '%' and $deg >= 0 and $deg <= 100) {
    clip-path: polygon(0% 0%, 100% #{$deg}, 100% 100%, 0% #{100% - $deg});
  } @else {
    @error 'must be a percent 0 - 100';
  }
}

@mixin clip-left($deg: 2%) {
  @if (unit($deg) == '%' and $deg >= 0 and $deg <= 100) {
    clip-path: polygon(0% #{$deg}, 100% 0%, 100% #{100 - $deg}, 0% 100%);
  } @else {
    @error 'must be a percent 0 - 100';
  }
}

// if query is number create mixin else get from mixin list
@mixin mq($query) {
  @if (type-of($query) == number) {
    @media only screen and (min-width: $query) {
      @content;
    }
  } @else if (map-has-key($breakpoints, $query)) {
    @media only screen and (min-width: map-get($breakpoints, $query)) {
      @content;
    }
  } @else {
    @error value must be unit of measurement or listed in $breakpoints map;
  }
}

@mixin line-break(
  $margin: $spacer * 0.5,
  // currentColor == current text color
    $color: currentColor,
  $height: 2px,
  $width: 100%
) {
  &::after {
    content: '';
    display: block;
    margin: $margin auto;
    background: $color;
    height: $height;
    width: $width;
    @content;
  }
}

// * also a good easy fallback for non grid supported devices * //
@mixin limit-width {
  @include mq(md) {
    width: 750px;
    margin: $spacer * 4 auto;
  }
}

// ! grid is set for current site (not universal) ! //
@mixin grid($cols) {
  display: grid;
  grid: auto-flow / repeat($cols, 1fr);
  grid-gap: $spacer * 2;
  margin: 0 auto;
}

// * hacky glass * //
// needs a better solution -- eventually
// make sure to read .glass-front for hack
// HTML
// <div class="glass-back">
//   <div class="glass-front">...content...</div>
//   <div class="glass-overlay"></div>
// </div>

@mixin hackyglass(
  $hacky-background-url: '',
  // for background
    $hacky-height: 500px,
  $hacky-glass-height: 80%,
  $hacky-glass-width: 80%,
  // works best 5 - 10
    $hacky-blur: 10px,
  // works best with RGBA
    $hacky-color: rgba(#808080, 0.3)
) {
  .glass-back {
    background: $primary-color url($hacky-background-url);
    background-position: fixed;
    background-repeat: no-repeat;
    background-size: cover;
    height: $hacky-height;
    overflow: hidden;
    width: 100%;
  }

  .glass-overlay {
    background: inherit;
    background-size: cover;
    box-shadow: inset 0 0 0 3000px $hacky-color;
    filter: blur($hacky-blur);
    height: $hacky-glass-height;
    margin: 0 auto;
    position: relative;
    width: $hacky-glass-width;
    z-index: 1;
  }

  .glass-front {
    float: right;
    margin: 0 auto;
    padding: 25px; //adjust to position text
    position: relative;
    z-index: 2;
  }
}
